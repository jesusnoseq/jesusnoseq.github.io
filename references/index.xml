<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>References on Jesusnoseq</title>
    <link>https://jesusnoseq.com/references/</link>
    <description>Recent content in References on Jesusnoseq</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language><atom:link href="https://jesusnoseq.com/references/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://jesusnoseq.com/references/awscret.go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jesusnoseq.com/references/awscret.go/</guid>
      <description>https://github.com/TelefonicaTC2Tech/sdwan-fortinet-automation/blob/main/functions/pkg/secrets/aws_client.go
package secrets import ( &amp;#34;context&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;strings&amp;#34; &amp;#34;github.com/TelefonicaTC2Tech/sdwan-fortinet-automation/functions/pkg/aws/session&amp;#34; &amp;#34;github.com/TelefonicaTC2Tech/sdwan-fortinet-automation/functions/pkg/config&amp;#34; log &amp;#34;github.com/sirupsen/logrus&amp;#34; ) type Provider string const ( AWSSM Provider = &amp;#34;AWSSM&amp;#34; Env Provider = &amp;#34;ENV&amp;#34; ) func GetSecretsProvider(des string) Provider { m := map[string]Provider{ string(AWSSM): AWSSM, string(Env): Env, } return m[strings.ToUpper(des)] } type ISecretClient interface { Get(ctx context.Context, name config.SecretKey) (string, error) GetCredentials( ctx context.Context, name config.SecretKey, ) (user, password string, err error) } func GetSecretsClient(ctx context.Context, p Provider) (ISecretClient, error) { log.</description>
    </item>
    
  </channel>
</rss>
